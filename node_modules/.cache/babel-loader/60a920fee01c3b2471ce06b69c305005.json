{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/Myportfolio2019/client/src/components/contact.js\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nclass Contact extends React.Component {\n  render() {\n    return React.createElement(Formik, {\n      initialValues: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        message: ''\n      },\n      validationSchema: Yup.object().shape({\n        firstName: Yup.string().required('First Name is required'),\n        lastName: Yup.string().required('Last Name is required'),\n        email: Yup.string().email('Email is invalid').required('Email is required'),\n        message: Yup.string().min(10, 'Message must contain at least 10 characters').required('A message is required')\n      }),\n      onSubmit: async fields => {\n        await axios.post('/api/form', {\n          firstName,\n          lastName,\n          email,\n          message\n        });\n        alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n      },\n      render: ({\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"work-together\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Let's\"), \" Work Together!\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"firstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Field, {\n        name: \"firstName\",\n        type: \"text\",\n        className: 'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"firstName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"lastName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Field, {\n        name: \"lastName\",\n        type: \"text\",\n        className: 'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"lastName\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Field, {\n        name: \"email\",\n        type: \"text\",\n        className: 'form-control' + (errors.email && touched.email ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"email\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        rows: \"10\",\n        htmlFor: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Message\"), React.createElement(Field, {\n        name: \"message\",\n        type: \"message\",\n        className: 'form-control' + (errors.message && touched.message ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"message\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn  mr-2\",\n        style: {\n          color: 'white',\n          background: '#ff00dd '\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Reset\")))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/mike/Desktop/Myportfolio2019/client/src/components/contact.js"],"names":["React","Formik","Field","Form","ErrorMessage","Yup","axios","Contact","Component","render","firstName","lastName","email","message","object","shape","string","required","min","fields","post","alert","JSON","stringify","errors","status","touched","color","background"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nclass Contact extends React.Component {\n  render() {\n    return (\n      <Formik\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          email: '',\n          message: ''\n        }}\n        validationSchema={Yup.object().shape({\n          firstName: Yup.string().required('First Name is required'),\n          lastName: Yup.string().required('Last Name is required'),\n          email: Yup.string()\n            .email('Email is invalid')\n            .required('Email is required'),\n          message: Yup.string()\n            .min(10, 'Message must contain at least 10 characters')\n            .required('A message is required')\n        })}\n        onSubmit={async fields => {\n          await axios.post('/api/form', {\n            firstName,\n            lastName,\n            email,\n            message\n          });\n          alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n        }}\n        render={({ errors, status, touched }) => (\n          <Form>\n            <div className='container'>\n              <div className='work-together'>\n                <h3>\n                  <strong>Let's</strong> Work Together!\n                </h3>\n              </div>\n              <div className='form-group'>\n                <label htmlFor='firstName'>First Name</label>\n                <Field\n                  name='firstName'\n                  type='text'\n                  className={\n                    'form-control' +\n                    (errors.firstName && touched.firstName ? ' is-invalid' : '')\n                  }\n                />\n                <ErrorMessage\n                  name='firstName'\n                  component='div'\n                  className='invalid-feedback'\n                />\n              </div>\n              <div className='form-group'>\n                <label htmlFor='lastName'>Last Name</label>\n                <Field\n                  name='lastName'\n                  type='text'\n                  className={\n                    'form-control' +\n                    (errors.lastName && touched.lastName ? ' is-invalid' : '')\n                  }\n                />\n                <ErrorMessage\n                  name='lastName'\n                  component='div'\n                  className='invalid-feedback'\n                />\n              </div>\n              <div className='form-group'>\n                <label htmlFor='email'>Email</label>\n                <Field\n                  name='email'\n                  type='text'\n                  className={\n                    'form-control' +\n                    (errors.email && touched.email ? ' is-invalid' : '')\n                  }\n                />\n                <ErrorMessage\n                  name='email'\n                  component='div'\n                  className='invalid-feedback'\n                />\n              </div>\n              <div className='form-group'>\n                <label rows='10' htmlFor='message'>\n                  Message\n                </label>\n                <Field\n                  name='message'\n                  type='message'\n                  className={\n                    'form-control' +\n                    (errors.message && touched.message ? ' is-invalid' : '')\n                  }\n                />\n                <ErrorMessage\n                  name='message'\n                  component='div'\n                  className='invalid-feedback'\n                />\n              </div>\n\n              <div className='form-group'>\n                <button\n                  type='submit'\n                  className='btn  mr-2'\n                  style={{ color: 'white', background: '#ff00dd ' }}\n                >\n                  Register\n                </button>\n                <button type='reset' className='btn btn-secondary'>\n                  Reset\n                </button>\n              </div>\n            </div>\n          </Form>\n        )}\n      />\n    );\n  }\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}
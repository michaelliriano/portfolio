{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Desktop/Myportfolio2019/client/src/components/contact.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'fullName':\n          errors.fullName = value.length < 5 ? 'Full Name must be 5 characters long!' : '';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'message':\n          errors.message = value.length < 10 ? 'Message must be 10 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {\n        console.log(errors);\n      });\n    };\n\n    this.state = {\n      fullName: '',\n      email: '',\n      phone: '',\n      message: '',\n      errors: {\n        fullName: '',\n        email: '',\n        phone: '',\n        message: ''\n      }\n    };\n  }\n\n  async handleFormSubmit(event) {\n    event.preventDefault();\n    const _this$state = this.state,\n          fullName = _this$state.fullName,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          message = _this$state.message;\n    const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n    const validateForm = errors => {\n      let valid = true;\n      Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n      return valid;\n    };\n\n    if (validateForm(this.state.errors)) {\n      const form = await axios.post('/api/form', {\n        fullName,\n        email,\n        phone,\n        message\n      });\n      alert('Thank you ' + this.state.fullName + ' I will get back to you soon.');\n    } else {\n      console.error('Invalid Form');\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Let's Work Together!\")), React.createElement(\"form\", {\n      action: \"/\",\n      onSubmit: this.handleFormSubmit,\n      id: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"flex-outer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"first-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"full-name\",\n      placeholder: \"Enter your first name here\",\n      value: this.state.fullName,\n      onChange: e => this.setState({\n        fullName: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      required: true,\n      id: \"email\",\n      placeholder: \"Enter your email here\",\n      value: this.state.email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"input\", {\n      type: \"tel\",\n      id: \"phone\",\n      placeholder: \"Enter your phone here\",\n      value: this.state.phone,\n      onChange: e => this.setState({\n        phone: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      rows: \"6\",\n      required: true,\n      id: \"message\",\n      placeholder: \"Enter your message here\",\n      onChange: e => this.setState({\n        message: e.target.value\n      }),\n      value: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: e => this.handleFormSubmit(e),\n      value: \"Submit\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.mailSent && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Thank you for submitting!\"))))));\n  }\n\n}\n\nexport default NameForm;","map":{"version":3,"sources":["/Users/mike/Desktop/Myportfolio2019/client/src/components/contact.js"],"names":["React","Component","axios","NameForm","constructor","props","handleChange","event","preventDefault","target","name","value","errors","state","fullName","length","email","validEmailRegex","test","message","setState","console","log","phone","handleFormSubmit","RegExp","validateForm","valid","Object","values","forEach","val","form","post","alert","error","render","e","mailSent","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport axios from 'axios';\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: '',\n      email: '',\n      phone: '',\n      message: '',\n      errors: {\n        fullName: '',\n        email: '',\n        phone: '',\n        message: ''\n      }\n    };\n  }\n\n  handleChange = event => {\n    event.preventDefault();\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case 'fullName':\n        errors.fullName =\n          value.length < 5 ? 'Full Name must be 5 characters long!' : '';\n        break;\n      case 'email':\n        errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n        break;\n      case 'message':\n        errors.message =\n          value.length < 10 ? 'Message must be 10 characters long!' : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ errors, [name]: value }, () => {\n      console.log(errors);\n    });\n  };\n\n  async handleFormSubmit(event) {\n    event.preventDefault();\n    const { fullName, email, phone, message } = this.state;\n    const validEmailRegex = RegExp(\n      /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n    );\n    const validateForm = errors => {\n      let valid = true;\n      Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n      return valid;\n    };\n    if (validateForm(this.state.errors)) {\n      const form = await axios.post('/api/form', {\n        fullName,\n        email,\n        phone,\n        message\n      });\n      alert(\n        'Thank you ' + this.state.fullName + ' I will get back to you soon.'\n      );\n    } else {\n      console.error('Invalid Form');\n    }\n  }\n\n  render() {\n    return (\n      <section className='contact'>\n        <div className='container'>\n          <div>\n            <h3>Let's Work Together!</h3>\n          </div>\n          <form action='/' onSubmit={this.handleFormSubmit} id='form'>\n            <ul className='flex-outer'>\n              <li>\n                <label htmlFor='first-name'>Full Name</label>\n                <input\n                  type='text'\n                  id='full-name'\n                  placeholder='Enter your first name here'\n                  value={this.state.fullName}\n                  onChange={e => this.setState({ fullName: e.target.value })}\n                />\n              </li>\n\n              <li>\n                <label htmlFor='email'>Email</label>\n                <input\n                  type='email'\n                  required\n                  id='email'\n                  placeholder='Enter your email here'\n                  value={this.state.email}\n                  onChange={e => this.setState({ email: e.target.value })}\n                />\n              </li>\n              <li>\n                <label htmlFor='phone'>Phone</label>\n                <input\n                  type='tel'\n                  id='phone'\n                  placeholder='Enter your phone here'\n                  value={this.state.phone}\n                  onChange={e => this.setState({ phone: e.target.value })}\n                />\n              </li>\n              <li>\n                <label htmlFor='message'>Message</label>\n                <textarea\n                  rows='6'\n                  required\n                  id='message'\n                  placeholder='Enter your message here'\n                  onChange={e => this.setState({ message: e.target.value })}\n                  value={this.state.message}\n                ></textarea>\n              </li>\n\n              <li>\n                <button\n                  onClick={e => this.handleFormSubmit(e)}\n                  value='Submit'\n                  type='submit'\n                >\n                  Submit\n                </button>\n              </li>\n            </ul>\n            <div>\n              {this.state.mailSent && (\n                <div>\n                  <h1 style={{ color: 'white' }}>Thank you for submitting!</h1>\n                </div>\n              )}\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default NameForm;\n"]},"metadata":{},"sourceType":"module"}